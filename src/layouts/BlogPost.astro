---
import Layout from './Layout.astro';

interface Props {
  frontmatter?: {
    title: string;
    description?: string;
    pubDate: Date | string;
    author?: string;
  };
  title?: string;
  description?: string;
  pubDate?: Date | string;
  author?: string;
}

const { frontmatter } = Astro.props;

// Extract data from frontmatter or direct props
const title = frontmatter?.title || Astro.props.title || 'Untitled';
const description = frontmatter?.description || Astro.props.description;
const author = frontmatter?.author || Astro.props.author || "Scott Stewart";
const rawPubDate = frontmatter?.pubDate || Astro.props.pubDate;

// Convert pubDate to Date object if it's a string, with better error handling
// Convert pubDate to Date object if it's a string, with better error handling
let dateObject: Date | null = null;
try {
  console.log('Raw pubDate:', rawPubDate, 'Type:', typeof rawPubDate);
  
  if (rawPubDate instanceof Date) {
    dateObject = rawPubDate;
  } else if (typeof rawPubDate === 'string') {
   // Try multiple date parsing approaches
   let parsedDate: Date | null = null;
    
    // Try YYYY-MM-DD format
    if (/^\d{4}-\d{2}-\d{2}$/.test(rawPubDate)) {
      parsedDate = new Date(rawPubDate + 'T00:00:00');
    }
    
    // Try direct parsing
    if (!parsedDate || isNaN(parsedDate.getTime())) {
      parsedDate = new Date(rawPubDate);
    }
    
    // Try parsing with explicit timezone
    if (!parsedDate || isNaN(parsedDate.getTime())) {
      parsedDate = new Date(rawPubDate + 'T00:00:00Z');
    }
    
    if (parsedDate && !isNaN(parsedDate.getTime())) {
      dateObject = parsedDate;
      console.log('Successfully parsed date:', dateObject);
    } else {
      console.log('Failed to parse date, using current date');
      dateObject = new Date();
    }
  }
} catch (error) {
  console.log('Date parsing error:', error);
  dateObject = new Date();
}
---

<Layout title={title} description={description}>
  <section class="hero">
    <div class="container">
      <div class="hero-content">
        <h1>{title}</h1>
        {description && <p class="hero-description">{description}</p>}
        <div class="hero-meta">
          <time class="hero-date">{dateObject.toLocaleDateString('en-US', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric'  
          })}</time>
          {author && <span class="hero-author">by {author}</span>}
        </div>
      </div>
    </div>
  </section>

  <div class="container">
    <article class="blog-post">
      <div class="content">
        <slot />
      </div>
    </article>
  </div>
</Layout>

<style>
  /* Base styles matching index.astro */
  @property --myColor1 {
    syntax: '<color>';
    initial-value: rgba(241, 241, 242, 1);
    inherits: false;
  }

  @property --myColor2 {
    syntax: '<color>';
    initial-value: rgba(91, 124, 153, 1);
    inherits: false;
  }

  /* Font family definitions matching index.astro */
  h1, h2, h3, h4, h5, h6, time {
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 900;
    font-variation-settings: 'wght' 900;
  }

  p, time, a {
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 400;
    font-variation-settings: 'wght' 500;
  }

  .hero {
    background-color: var(--hero-bg-color);
    border-bottom: 5px solid var(--hero-border-color);
    transition: background-color 0.3s ease, border-color 0.3s ease;
    padding: 3rem 0;
  }

  .hero-content {
    text-align: center;
    max-width: 65ch;
    margin: 0 auto;
  }

  .hero h1 {
    margin: 0 0 1rem 0;
    color: var(--post-title-color);
    transition: color 0.3s ease;
    font-size: 2.5rem;
    line-height: 1.2;
  }

  .hero-description {
    font-size: 1.2rem;
    color: var(--post-description-color);
    margin: 0 0 1.5rem 0;
    line-height: 1.5;
    opacity: 0.9;
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 400;
    font-variation-settings: 'wght' 400;
  }

  .hero-meta {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    font-size: 0.9rem;
    color: var(--post-meta-color);
    transition: color 0.3s ease;
  }

  .hero-date {
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 600;
    font-variation-settings: 'wght' 600;
  }

  .hero-author {
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 400;
    font-variation-settings: 'wght' 400;
    font-style: italic;
  }

  .hero-meta::before {
    content: '';
    width: 2rem;
    height: 1px;
    background-color: var(--post-meta-color);
    opacity: 0.5;
  }

  .hero-meta::after {
    content: '';
    width: 2rem;
    height: 1px;
    background-color: var(--post-meta-color);
    opacity: 0.5;
  }

  .blog-post {
    margin: 0 auto;
    padding: 1rem 4rem;
    background-color: var(--blog-post-bg);
    transition: background-color 0.3s ease;
  }

  .content {
    font-size: 1.1rem;
    line-height: 1.7;
    color: var(--post-description-color);
    transition: color 0.3s ease;
  }

  /* Headings (H1-H6) */
  .content :global(h1) {
    font-size: 2.5rem;
    margin: 2.5rem 0 1.5rem;
    color: var(--post-title-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 900;
    font-variation-settings: 'wght' 900;
    line-height: 1.2;
  }

  .content :global(h2) {
    font-size: 2rem;
    margin: 2rem 0 1rem;
    color: var(--section-heading-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 900;
    font-variation-settings: 'wght' 900;
  }

  .content :global(h3) {
    font-size: 1.6rem;
    margin: 1.8rem 0 0.8rem;
    color: var(--section-heading-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 900;
    font-variation-settings: 'wght' 700;
  }

  .content :global(h4) {
    font-size: 1.4rem;
    margin: 1.6rem 0 0.6rem;
    color: var(--section-heading-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 900;
    font-variation-settings: 'wght' 700;
  }

  .content :global(h5) {
    font-size: 1.2rem;
    margin: 1.4rem 0 0.4rem;
    color: var(--section-heading-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 900;
    font-variation-settings: 'wght' 700;
  }

  .content :global(h6) {
    font-size: 1rem;
    margin: 1.2rem 0 0.2rem;
    color: var(--section-heading-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 900;
    font-variation-settings: 'wght' 700;
  }

  /* Paragraphs */
  .content :global(p) {
    margin-bottom: 1.5rem;
    color: var(--post-description-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 400;
    font-variation-settings: 'wght' 500;
  }

  /* Bold and Italic */
  .content :global(strong),
  .content :global(b) {
    font-weight: 900;
    font-variation-settings: 'wght' 900;
    color: var(--post-title-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(em),
  .content :global(i) {
    font-style: italic;
    color: var(--post-meta-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  /* Strikethrough */
  .content :global(del),
  .content :global(s) {
    text-decoration: line-through;
    color: var(--post-meta-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  /* Highlight */
  .content :global(mark) {
    background-color: var(--accent-color);
    color: var(--bg-color);
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    transition: background-color 0.3s ease, color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  /* Subscript and Superscript */
  .content :global(sub) {
    font-size: 0.8em;
    vertical-align: sub;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(sup) {
    font-size: 0.8em;
    vertical-align: super;
    font-family: 'Montserrat Variable', sans-serif;
  }

  /* Links */
  .content :global(a) {
    color: var(--accent-color);
    text-decoration: none;
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
    font-weight: 400;
    font-variation-settings: 'wght' 500;
  }

  .content :global(a:hover) {
    text-decoration: underline;
  }

  /* Images */
  .content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 2rem 0;
    display: block;
  }

  /* Blockquotes */
  .content :global(blockquote) {
    border-left: 4px solid var(--accent-color);
    padding-left: 1rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--post-meta-color);
    transition: color 0.3s ease, border-color 0.3s ease;
    background-color: var(--post-card-bg);
    padding: 1rem 1rem 1rem 2rem;
    border-radius: 8px;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(blockquote p) {
    margin: 0;
    font-family: 'Montserrat Variable', sans-serif;
  }

  /* Lists */
  .content :global(ul),
  .content :global(ol) {
    margin: 1.5rem 0;
    padding-left: 2rem;
    color: var(--post-description-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(li) {
    margin-bottom: 0.5rem;
    line-height: 1.7;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(ul) {
    list-style-type: disc;
  }

  .content :global(ol) {
    list-style-type: decimal;
  }

  .content :global(ul ul),
  .content :global(ol ol),
  .content :global(ul ol),
  .content :global(ol ul) {
    margin: 0.5rem 0;
  }

  /* Task Lists */
  .content :global(input[type="checkbox"]) {
    margin-right: 0.5rem;
    accent-color: var(--accent-color);
  }

  .content :global(li:has(input[type="checkbox"])) {
    list-style: none;
    margin-left: -1.5rem;
  }

  /* Definition Lists */
  .content :global(dl) {
    margin: 1.5rem 0;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(dt) {
    font-weight: 900;
    font-variation-settings: 'wght' 900;
    color: var(--post-title-color);
    margin-top: 1rem;
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(dd) {
    margin-left: 2rem;
    margin-bottom: 0.5rem;
    color: var(--post-description-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  /* Code */
  .content :global(code) {
    background-color: var(--post-card-hover-bg);
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-size: 0.9em;
    font-family: 'Monaco', 'Consolas', 'Courier New', monospace;
    transition: background-color 0.3s ease;
    color: var(--post-title-color);
  }

  /* Fenced Code Blocks */
  .content :global(pre) {
    background-color: var(--post-card-hover-bg);
    padding: 1rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 1.5rem 0;
    transition: background-color 0.3s ease;
    border: 1px solid var(--post-card-bg);
  }

  .content :global(pre code) {
    background: none;
    padding: 0;
    border-radius: 0;
    font-family: 'Monaco', 'Consolas', 'Courier New', monospace;
  }

  /* Tables */
  .content :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 2rem 0;
    background-color: var(--post-card-bg);
    border-radius: 8px;
    overflow: hidden;
    transition: background-color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(th),
  .content :global(td) {
    padding: 0.75rem 1rem;
    text-align: left;
    border-bottom: 1px solid var(--post-card-hover-bg);
    transition: border-color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(th) {
    background-color: var(--post-card-hover-bg);
    font-weight: 900;
    font-variation-settings: 'wght' 900;
    color: var(--post-title-color);
    transition: background-color 0.3s ease, color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(td) {
    color: var(--post-description-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(tr:hover) {
    background-color: var(--post-card-hover-bg);
    transition: background-color 0.3s ease;
  }

  /* Horizontal Rules */
  .content :global(hr) {
    border: none;
    height: 2px;
    background-color: var(--accent-color);
    margin: 3rem 0;
    border-radius: 1px;
    transition: background-color 0.3s ease;
  }

  /* Footnotes */
  .content :global(.footnote-ref) {
    font-size: 0.8em;
    vertical-align: super;
    color: var(--accent-color);
    text-decoration: none;
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(.footnote-ref:hover) {
    text-decoration: underline;
  }

  .content :global(.footnotes) {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--post-card-hover-bg);
    font-size: 0.9em;
    transition: border-color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(.footnotes ol) {
    padding-left: 1rem;
    font-family: 'Montserrat Variable', sans-serif;
  }

  .content :global(.footnotes li) {
    color: var(--post-meta-color);
    transition: color 0.3s ease;
    font-family: 'Montserrat Variable', sans-serif;
  }

  /* Custom ID headings */
  .content :global([id]) {
    scroll-margin-top: 2rem;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .hero {
      padding: 2rem 0;
    }

    .hero h1 {
      font-size: 2rem;
    }

    .hero-description {
      font-size: 1.1rem;
    }

    .hero-meta {
      flex-direction: column;
      gap: 0.5rem;
    }

    .hero-meta::before,
    .hero-meta::after {
      display: none;
    }

    .blog-post {
      padding: 1.5rem 0.75rem;
      margin: 0 0.5rem;
      border-radius: 8px;
    }

    .content :global(h1) {
      font-size: 2rem;
    }

    .content :global(h2) {
      font-size: 1.6rem;
    }

    .content :global(h3) {
      font-size: 1.4rem;
    }

    .content :global(table) {
      font-size: 0.9rem;
    }

    .content :global(th),
    .content :global(td) {
      padding: 0.5rem;
    }
  }
</style> 